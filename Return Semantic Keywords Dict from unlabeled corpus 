{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Hackathon.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "toc_visible": true,
      "authorship_tag": "ABX9TyN3ybDXX8/9F1my09A0546c",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/cm2435/Coding-Interviews/blob/main/Return%20Semantic%20Keywords%20Dict%20from%20unlabeled%20corpus%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "V9dWtD83tvsc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "c7308fee-9a69-4777-d9db-36bca948df74"
      },
      "source": [
        "  import pandas as pd\r\n",
        "  import numpy as np\r\n",
        "  import re\r\n",
        "  import nltk\r\n",
        "  import gensim\r\n",
        "  from gensim.models import word2vec\r\n",
        "  from nltk.corpus import stopwords \r\n",
        "  nltk.download('stopwords')\r\n",
        "  nltk.download('wordnet')"
      ],
      "execution_count": 421,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[nltk_data] Downloading package stopwords to /root/nltk_data...\n",
            "[nltk_data]   Package stopwords is already up-to-date!\n",
            "[nltk_data] Downloading package wordnet to /root/nltk_data...\n",
            "[nltk_data]   Package wordnet is already up-to-date!\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 421
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 305
        },
        "id": "ACxJkiwRuLJ3",
        "outputId": "37c0e020-0cfd-45e5-ea8c-b8e4b645fae6"
      },
      "source": [
        "  #Ingest the dataset for training \r\n",
        "\r\n",
        "\r\n",
        "  def Data_Ingest(url):\r\n",
        "    return pd.read_csv(url, sep=r',', engine='python')\r\n",
        "\r\n",
        "  datas = Data_Ingest('/content/Hackathon.csv')\r\n",
        "  TestTrain  = Data_Ingest('/content/TestTrain.csv')\r\n",
        "\r\n",
        "\r\n",
        "  data.head(5)\r\n",
        "  TestTrain.head(5)\r\n"
      ],
      "execution_count": 422,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Document ID</th>\n",
              "      <th>Title</th>\n",
              "      <th>Description</th>\n",
              "      <th>Leadership</th>\n",
              "      <th>Data Visualisation</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2802463</td>\n",
              "      <td>Ways to Build a Winning Team: Trust, Freedom, ...</td>\n",
              "      <td>There is no way to win without appreciating yo...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>456353</td>\n",
              "      <td>Setting Team and Employee Goals</td>\n",
              "      <td>Employee goals should be driven by the organiz...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>577355</td>\n",
              "      <td>Transitioning from Individual Contributor to M...</td>\n",
              "      <td>Before you start your first management role, i...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>622053</td>\n",
              "      <td>Giving and Receiving Feedback</td>\n",
              "      <td>All professionals are trying to get better at ...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2812491</td>\n",
              "      <td>Ideation for Leaders</td>\n",
              "      <td>Explore how to create a rich culture of ideati...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Document ID  ... Data Visualisation\n",
              "0      2802463  ...                  0\n",
              "1       456353  ...                  0\n",
              "2       577355  ...                  0\n",
              "3       622053  ...                  0\n",
              "4      2812491  ...                  0\n",
              "\n",
              "[5 rows x 5 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 422
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6FIZoVUHTDwm"
      },
      "source": [
        "  #Drop Null vals \r\n",
        " \r\n",
        "  data = data.dropna(how=\"any\")\r\n",
        "\r\n",
        "  SklearnData = TestTrain.dropna(how=\"any\")"
      ],
      "execution_count": 423,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wexbQ8WV833a"
      },
      "source": [
        "  #Data Pre-processing\r\n",
        "\r\n",
        "  STOP_WORDS = nltk.corpus.stopwords.words() + ['karrel','toister','canaday','toister','boyd', 'menlo', 'bodel']\r\n",
        "  ps = nltk.stem.porter.PorterStemmer()\r\n",
        "  lem = nltk.stem.wordnet.WordNetLemmatizer()\r\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hCBOgyJf2chu"
      },
      "source": [
        "  def clean_sentence(val):\r\n",
        "      \"remove chars that are not letters or numbers, downcase, then remove stop words, stem and lemmatise words\"\r\n",
        "      regex = re.compile('([^\\s\\w]|_)+')\r\n",
        "      sentence = regex.sub('', val).lower()\r\n",
        "      sentence = sentence.split(\" \")\r\n",
        "    \r\n",
        "      for word in list(sentence):\r\n",
        "          if word in STOP_WORDS:\r\n",
        "              sentence.remove(word)\r\n",
        "\r\n",
        "      sentence = [ps.stem(word) for word in sentence]\r\n",
        "      sentence = [lem.lemmatize(word) for word in sentence]\r\n",
        "      sentence = \" \".join(sentence)\r\n",
        "    \r\n",
        "      return sentence"
      ],
      "execution_count": 424,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yLg9UdfYOjQe"
      },
      "source": [
        "  def clean_dataframe(data):\r\n",
        "      for col in ['Description']:\r\n",
        "          data[col] = data[col].apply(clean_sentence)\r\n",
        "    \r\n",
        "      return data"
      ],
      "execution_count": 425,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GeBKP0Cs4Fly"
      },
      "source": [
        "  data = clean_dataframe(data)\r\n",
        "\r\n",
        "  #Ran out of time to do SVM implimentation of the clasified data, will stick to just Word2Vec model\r\n",
        "  SklearnData = clean_dataframe(SklearnData)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hqM2MXym9PVa"
      },
      "source": [
        "  #Build a WordSet to Perform Further Analysis on \r\n",
        "\r\n",
        "  def build_corpus(data):\r\n",
        "      \"Creates a list of lists containing words from each sentence\"\r\n",
        "      corpus = []\r\n",
        "      for col in ['Description']:\r\n",
        "          for sentence in data[col].iteritems():\r\n",
        "              word_list = sentence[1].split(\" \")\r\n",
        "              corpus.append(word_list)\r\n",
        "            \r\n",
        "      return corpus\r\n",
        "  \r\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ngNucLzQUfpB",
        "outputId": "47fdf7e7-4d89-4afd-d0e0-c71c4a6426b2"
      },
      "source": [
        "  corpus = build_corpus(data)        \r\n",
        "  corpus[0:10]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[['paddl',\n",
              "  'pacif',\n",
              "  'surfer',\n",
              "  'iphon',\n",
              "  'photograph',\n",
              "  'toni',\n",
              "  'cruz',\n",
              "  'whose',\n",
              "  'portrait',\n",
              "  'california',\n",
              "  'coast',\n",
              "  'gritti',\n",
              "  'sublim',\n",
              "  'attract',\n",
              "  'follow',\n",
              "  'instagram',\n",
              "  'toni',\n",
              "  'use',\n",
              "  'lifeproof',\n",
              "  'case',\n",
              "  'leash',\n",
              "  'discrimin',\n",
              "  'eye',\n",
              "  'lot',\n",
              "  'ingenu',\n",
              "  'captur',\n",
              "  'real',\n",
              "  'moment',\n",
              "  'unnot',\n",
              "  'land',\n",
              "  'edit',\n",
              "  'selfimpo',\n",
              "  'time',\n",
              "  'limit',\n",
              "  'maxim',\n",
              "  'impact',\n",
              "  'join',\n",
              "  'describ',\n",
              "  'edit',\n",
              "  'process',\n",
              "  'use',\n",
              "  'tool',\n",
              "  'like',\n",
              "  'snap',\n",
              "  'blender',\n",
              "  'mextur',\n",
              "  'explain',\n",
              "  'instagram',\n",
              "  'commun',\n",
              "  'motiv',\n",
              "  'work',\n",
              "  'share',\n",
              "  'make',\n",
              "  'creativ',\n",
              "  'use',\n",
              "  'mistak'],\n",
              " ['great',\n",
              "  'design',\n",
              "  'solv',\n",
              "  'problem',\n",
              "  'develop',\n",
              "  'world',\n",
              "  'krista',\n",
              "  'donaldson',\n",
              "  'ceo',\n",
              "  'drev',\n",
              "  'believ',\n",
              "  'combin',\n",
              "  'emerg',\n",
              "  'technolog',\n",
              "  'design',\n",
              "  'meet',\n",
              "  'real',\n",
              "  'demand',\n",
              "  'improv',\n",
              "  'health',\n",
              "  'prosper',\n",
              "  'peopl',\n",
              "  'live',\n",
              "  '4',\n",
              "  'day',\n",
              "  'creativ',\n",
              "  'spark',\n",
              "  'krista',\n",
              "  'talk',\n",
              "  'evolut',\n",
              "  'compani',\n",
              "  'success',\n",
              "  'productsfrom',\n",
              "  'led',\n",
              "  'phototherapi',\n",
              "  'devic',\n",
              "  'cure',\n",
              "  'jaundic',\n",
              "  'newborn',\n",
              "  'afford',\n",
              "  'cuttingedg',\n",
              "  'prosthet',\n",
              "  'explain',\n",
              "  'drev',\n",
              "  'identifi',\n",
              "  'realworld',\n",
              "  'need',\n",
              "  'prototyp',\n",
              "  'design',\n",
              "  'refin',\n",
              "  'user',\n",
              "  'feedback',\n",
              "  'solv',\n",
              "  'problem',\n",
              "  'distribut',\n",
              "  'ongo',\n",
              "  'servic',\n",
              "  'repair'],\n",
              " ['blender',\n",
              "  'free',\n",
              "  'opensourc',\n",
              "  'program',\n",
              "  'allow',\n",
              "  'artist',\n",
              "  'creat',\n",
              "  'stun',\n",
              "  'imageri',\n",
              "  'budget',\n",
              "  'textur',\n",
              "  'paint',\n",
              "  'tool',\n",
              "  'ideal',\n",
              "  'game',\n",
              "  'asset',\n",
              "  'textur',\n",
              "  'result',\n",
              "  'textur',\n",
              "  'map',\n",
              "  'play',\n",
              "  'well',\n",
              "  'varieti',\n",
              "  'engin',\n",
              "  'quick',\n",
              "  'cour',\n",
              "  'darrin',\n",
              "  'show',\n",
              "  'paint',\n",
              "  'textur',\n",
              "  'directli',\n",
              "  '3d',\n",
              "  'object',\n",
              "  'bake',\n",
              "  'textur',\n",
              "  'map',\n",
              "  'blender',\n",
              "  'use',\n",
              "  'game',\n",
              "  'engin',\n",
              "  'like',\n",
              "  'uniti',\n",
              "  'textur',\n",
              "  'techniqu',\n",
              "  'use',\n",
              "  'anim',\n",
              "  'game'],\n",
              " ['seri',\n",
              "  'music',\n",
              "  'produc',\n",
              "  'bobbi',\n",
              "  'owsinski',\n",
              "  'interview',\n",
              "  'icon',\n",
              "  'audio',\n",
              "  'musicindustri',\n",
              "  'person',\n",
              "  'outlier',\n",
              "  'forward',\n",
              "  'thinker',\n",
              "  'rule',\n",
              "  'breaker',\n",
              "  'instal',\n",
              "  'featur',\n",
              "  'produc',\n",
              "  'industri',\n",
              "  'criticindustri',\n",
              "  'advoc',\n",
              "  'michael',\n",
              "  'beinhorn',\n",
              "  'cowrit',\n",
              "  'produc',\n",
              "  'herbi',\n",
              "  'hancock',\n",
              "  '1983',\n",
              "  'megahit',\n",
              "  'rockit',\n",
              "  'michael',\n",
              "  'beinhorn',\n",
              "  'work',\n",
              "  'soundgarden',\n",
              "  'hole',\n",
              "  'marilyn',\n",
              "  'manson',\n",
              "  'ozzi',\n",
              "  'osbourn',\n",
              "  'among',\n",
              "  'save',\n",
              "  'popular',\n",
              "  'music',\n",
              "  'blog',\n",
              "  'witti',\n",
              "  'acerb',\n",
              "  'commentari',\n",
              "  'mani',\n",
              "  'facet',\n",
              "  'industri',\n",
              "  'interview',\n",
              "  'bobbi',\n",
              "  'michael',\n",
              "  'chat',\n",
              "  'michael',\n",
              "  'career',\n",
              "  'influenc',\n",
              "  'inspir',\n",
              "  'futur',\n",
              "  'pop',\n",
              "  'music'],\n",
              " ['avid',\n",
              "  'medium',\n",
              "  'compo',\n",
              "  'among',\n",
              "  'domin',\n",
              "  'nonlinear',\n",
              "  'edit',\n",
              "  'solut',\n",
              "  'film',\n",
              "  'televi',\n",
              "  'industri',\n",
              "  'mustknow',\n",
              "  'aspir',\n",
              "  'filmmak',\n",
              "  'join',\n",
              "  'author',\n",
              "  'ashley',\n",
              "  'kennedi',\n",
              "  'cour',\n",
              "  'demonstr',\n",
              "  'basic',\n",
              "  'intermedi',\n",
              "  'video',\n",
              "  'edit',\n",
              "  'techniqu',\n",
              "  'medium',\n",
              "  'compo',\n",
              "  'learn',\n",
              "  'build',\n",
              "  'sequenceseveryth',\n",
              "  'simpl',\n",
              "  'montag',\n",
              "  'complex',\n",
              "  'interviewba',\n",
              "  'packagesand',\n",
              "  'mix',\n",
              "  'audio',\n",
              "  'appli',\n",
              "  'effect',\n",
              "  'colorcorrect',\n",
              "  'footag',\n",
              "  'cour',\n",
              "  'show',\n",
              "  'creat',\n",
              "  'titl',\n",
              "  'captur',\n",
              "  'import',\n",
              "  'footag',\n",
              "  'manag',\n",
              "  'output',\n",
              "  'medium',\n",
              "  'troubleshoot',\n",
              "  'common',\n",
              "  'postproduct',\n",
              "  'issu',\n",
              "  'youll',\n",
              "  'prepar',\n",
              "  'movi',\n",
              "  'way',\n",
              "  'concept',\n",
              "  'creation',\n",
              "  'note',\n",
              "  'cour',\n",
              "  'updat',\n",
              "  'avid',\n",
              "  'medium',\n",
              "  'compo',\n",
              "  '6',\n",
              "  'essenti',\n",
              "  'train',\n",
              "  'addit',\n",
              "  'movi',\n",
              "  'reflect',\n",
              "  'applic',\n",
              "  'chang',\n",
              "  'version',\n",
              "  '7'],\n",
              " ['creativ',\n",
              "  'cloud',\n",
              "  'adob',\n",
              "  'cloudba',\n",
              "  'subscript',\n",
              "  'servic',\n",
              "  'deliv',\n",
              "  'latest',\n",
              "  'imag',\n",
              "  'innov',\n",
              "  'photoshop',\n",
              "  'cc',\n",
              "  'straight',\n",
              "  'comput',\n",
              "  'deke',\n",
              "  'mcclelland',\n",
              "  'help',\n",
              "  'get',\n",
              "  'new',\n",
              "  'featur',\n",
              "  'enhanc',\n",
              "  'cour',\n",
              "  'center',\n",
              "  'around',\n",
              "  'chang',\n",
              "  '2015',\n",
              "  'beyond',\n",
              "  'new',\n",
              "  'video',\n",
              "  'everi',\n",
              "  'time',\n",
              "  'adob',\n",
              "  'relea',\n",
              "  'updat',\n",
              "  'start',\n",
              "  'deke',\n",
              "  'cover',\n",
              "  'june',\n",
              "  '2015',\n",
              "  'relea',\n",
              "  'photoshop',\n",
              "  'cc',\n",
              "  'tune',\n",
              "  'learn',\n",
              "  'appli',\n",
              "  'multipli',\n",
              "  'stroke',\n",
              "  'drop',\n",
              "  'shadow',\n",
              "  'effect',\n",
              "  'singl',\n",
              "  'layer',\n",
              "  'work',\n",
              "  'new',\n",
              "  'glyph',\n",
              "  'panel',\n",
              "  'trade',\n",
              "  'dynam',\n",
              "  'link',\n",
              "  'asset',\n",
              "  'via',\n",
              "  'librari',\n",
              "  'panel',\n",
              "  'creat',\n",
              "  'multipl',\n",
              "  'artboard',\n",
              "  'singl',\n",
              "  'document',\n",
              "  'preview',\n",
              "  'design',\n",
              "  'directli',\n",
              "  'mobil',\n",
              "  'devic'],\n",
              " ['employ',\n",
              "  'landscap',\n",
              "  'volatil',\n",
              "  'scari',\n",
              "  'solid',\n",
              "  'career',\n",
              "  'plan',\n",
              "  'prepar',\n",
              "  'adept',\n",
              "  'find',\n",
              "  'work',\n",
              "  'rest',\n",
              "  'life',\n",
              "  'effect',\n",
              "  'career',\n",
              "  'plan',\n",
              "  'includ',\n",
              "  'know',\n",
              "  'determin',\n",
              "  'articul',\n",
              "  'sell',\n",
              "  'person',\n",
              "  'brand',\n",
              "  'cour',\n",
              "  'dr',\n",
              "  'chaz',\n",
              "  'austin',\n",
              "  'guid',\n",
              "  'key',\n",
              "  'step',\n",
              "  'career',\n",
              "  'plan',\n",
              "  'identifi',\n",
              "  'dream',\n",
              "  'job',\n",
              "  'monetiz',\n",
              "  'passion',\n",
              "  'brand',\n",
              "  'network',\n",
              "  'sure',\n",
              "  'land',\n",
              "  'next',\n",
              "  'opportun'],\n",
              " ['new',\n",
              "  '3d',\n",
              "  'max',\n",
              "  '2017',\n",
              "  'new',\n",
              "  'user',\n",
              "  'interfac',\n",
              "  'key',\n",
              "  'flatter',\n",
              "  'faster',\n",
              "  '3d',\n",
              "  'max',\n",
              "  '2017',\n",
              "  'introduc',\n",
              "  'autodesk',\n",
              "  'raytrac',\n",
              "  'art',\n",
              "  'physic',\n",
              "  'base',\n",
              "  'render',\n",
              "  'photorealist',\n",
              "  'still',\n",
              "  'aaron',\n",
              "  'f',\n",
              "  'ross',\n",
              "  'cover',\n",
              "  'featur',\n",
              "  'plu',\n",
              "  'mani',\n",
              "  'explain',\n",
              "  'expect',\n",
              "  'use',\n",
              "  'new',\n",
              "  'asset',\n",
              "  'manag',\n",
              "  'model',\n",
              "  'anim',\n",
              "  'materi',\n",
              "  'render',\n",
              "  'tool'],\n",
              " ['new',\n",
              "  'web',\n",
              "  'design',\n",
              "  'start',\n",
              "  'first',\n",
              "  'tutori',\n",
              "  'jame',\n",
              "  'williamson',\n",
              "  'introduc',\n",
              "  'fundament',\n",
              "  'concept',\n",
              "  'tool',\n",
              "  'learn',\n",
              "  'path',\n",
              "  'web',\n",
              "  'design',\n",
              "  'explain',\n",
              "  'mean',\n",
              "  'web',\n",
              "  'design',\n",
              "  'variou',\n",
              "  'area',\n",
              "  'special',\n",
              "  'whether',\n",
              "  'web',\n",
              "  'design',\n",
              "  'right',\n",
              "  'hobbi',\n",
              "  'career',\n",
              "  'along',\n",
              "  'way',\n",
              "  'talk',\n",
              "  'five',\n",
              "  'promin',\n",
              "  'design',\n",
              "  'develop',\n",
              "  'found',\n",
              "  'success',\n",
              "  'differ',\n",
              "  'corner',\n",
              "  'web',\n",
              "  'get',\n",
              "  'run',\n",
              "  'fast',\n",
              "  'check',\n",
              "  'chapter',\n",
              "  'get',\n",
              "  'onlin',\n",
              "  'choo',\n",
              "  'domain',\n",
              "  'web',\n",
              "  'host',\n",
              "  'get',\n",
              "  'around',\n",
              "  'backend',\n",
              "  'standard',\n",
              "  'websit',\n",
              "  'need',\n",
              "  'stock',\n",
              "  'tool',\n",
              "  'chest',\n",
              "  'learn',\n",
              "  'youll',\n",
              "  'need',\n",
              "  'build',\n",
              "  'brand',\n",
              "  'new',\n",
              "  'site',\n",
              "  'web',\n",
              "  'design',\n",
              "  'softwar',\n",
              "  'content',\n",
              "  'manag',\n",
              "  'system',\n",
              "  'test',\n",
              "  'prototyp',\n",
              "  'tool',\n",
              "  'develop',\n",
              "  'framework',\n",
              "  'final',\n",
              "  'jame',\n",
              "  'outlin',\n",
              "  'learn',\n",
              "  'path',\n",
              "  'go',\n",
              "  'next',\n",
              "  'touch',\n",
              "  'subject',\n",
              "  'standard',\n",
              "  'access',\n",
              "  'respon',\n",
              "  'design',\n",
              "  'three',\n",
              "  'core',\n",
              "  'web',\n",
              "  'technolog',\n",
              "  'html',\n",
              "  'c',\n",
              "  'javascript',\n",
              "  'cour',\n",
              "  'part',\n",
              "  'learn',\n",
              "  'path',\n",
              "  'approv',\n",
              "  'american',\n",
              "  'market',\n",
              "  'associ',\n",
              "  'gain',\n",
              "  'skill',\n",
              "  'need',\n",
              "  'becom',\n",
              "  'profess',\n",
              "  'certifi',\n",
              "  'market',\n",
              "  'pcm',\n",
              "  'digit',\n",
              "  'market',\n",
              "  'use',\n",
              "  'industrylead',\n",
              "  'cour',\n",
              "  'resourc',\n",
              "  'learn',\n",
              "  'path',\n",
              "  'certif',\n",
              "  'exam',\n",
              "  'show',\n",
              "  'lead',\n",
              "  'digit',\n",
              "  'transform'],\n",
              " ['vray',\n",
              "  'blender',\n",
              "  'combin',\n",
              "  'vray',\n",
              "  'flexibl',\n",
              "  'unprec',\n",
              "  'speed',\n",
              "  'world',\n",
              "  'famou',\n",
              "  'opensourc',\n",
              "  '3d',\n",
              "  'applic',\n",
              "  'build',\n",
              "  'render',\n",
              "  'skill',\n",
              "  'learn',\n",
              "  'new',\n",
              "  'tool',\n",
              "  'expand',\n",
              "  'creativ',\n",
              "  'possibl',\n",
              "  'cour',\n",
              "  'vray',\n",
              "  '30',\n",
              "  'recent',\n",
              "  'version',\n",
              "  'power',\n",
              "  'light',\n",
              "  'render',\n",
              "  'plugin',\n",
              "  'brian',\n",
              "  'bradley',\n",
              "  'introduc',\n",
              "  'vray',\n",
              "  'light',\n",
              "  'tool',\n",
              "  'naturallook',\n",
              "  'daylight',\n",
              "  'artifici',\n",
              "  'illumin',\n",
              "  'global',\n",
              "  'illumin',\n",
              "  'system',\n",
              "  'physic',\n",
              "  'camera',\n",
              "  'give',\n",
              "  'realworld',\n",
              "  'paramet',\n",
              "  'camera',\n",
              "  'control',\n",
              "  'fstop',\n",
              "  'focal',\n",
              "  'length',\n",
              "  'learn',\n",
              "  'use',\n",
              "  'vray',\n",
              "  'textur',\n",
              "  'tool',\n",
              "  'build',\n",
              "  'realist',\n",
              "  'surfac',\n",
              "  'includ',\n",
              "  'diffu',\n",
              "  'reflect',\n",
              "  'refract',\n",
              "  'surfac',\n",
              "  'last',\n",
              "  'least',\n",
              "  'explor',\n",
              "  'vray',\n",
              "  'sampl',\n",
              "  'control',\n",
              "  'adjust',\n",
              "  'qualiti',\n",
              "  'final',\n",
              "  'render']]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 386
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VhEduyOF9jb_"
      },
      "source": [
        "  from gensim.models import Word2Vec\r\n",
        "\r\n",
        "  word2vec = Word2Vec(corpus, min_count=4)\r\n",
        "  vocabulary =  word2vec.wv.vocab\r\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zqyu8xua_l4n",
        "outputId": "695a272c-5bd6-4e95-8105-6bbbc7a6c9b5"
      },
      "source": [
        "  sim_words = word2vec.wv.most_similar('leadership')\r\n",
        "\r\n",
        "  #remove names\r\n",
        "  del sim_words[1]  \r\n",
        "  del sim_words[5]\r\n",
        "  print(sim_words)\r\n",
        "\r\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[('coach', 0.9818875193595886), ('leader', 0.9447765350341797), ('recruit', 0.9378624558448792), ('negoti', 0.9314666986465454), ('workplac', 0.9305200576782227), ('outlin', 0.9252290725708008), ('execut', 0.9193933010101318), ('talent', 0.9189044833183289)]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bFJv47vYCIz8"
      },
      "source": [
        "    #final terms removing stemming: coach, leader, recruit, negotiate, \r\n",
        "    #workplace, outline, executive and talent"
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}